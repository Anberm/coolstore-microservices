// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: catalog.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Coolstore {
  public static partial class CatalogService
  {
    static readonly string __ServiceName = "coolstore.CatalogService";

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Coolstore.GetProductsRequest> __Marshaller_coolstore_GetProductsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Coolstore.GetProductsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Coolstore.GetProductsResponse> __Marshaller_coolstore_GetProductsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Coolstore.GetProductsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Coolstore.GetProductByIdRequest> __Marshaller_coolstore_GetProductByIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Coolstore.GetProductByIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Coolstore.GetProductByIdResponse> __Marshaller_coolstore_GetProductByIdResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Coolstore.GetProductByIdResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Coolstore.CreateProductRequest> __Marshaller_coolstore_CreateProductRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Coolstore.CreateProductRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Coolstore.CreateProductResponse> __Marshaller_coolstore_CreateProductResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Coolstore.CreateProductResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Ping = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Ping",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AdminPing = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AdminPing",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ExpectError = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExpectError",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Coolstore.GetProductsRequest, global::Coolstore.GetProductsResponse> __Method_GetProducts = new grpc::Method<global::Coolstore.GetProductsRequest, global::Coolstore.GetProductsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProducts",
        __Marshaller_coolstore_GetProductsRequest,
        __Marshaller_coolstore_GetProductsResponse);

    static readonly grpc::Method<global::Coolstore.GetProductByIdRequest, global::Coolstore.GetProductByIdResponse> __Method_GetProductById = new grpc::Method<global::Coolstore.GetProductByIdRequest, global::Coolstore.GetProductByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProductById",
        __Marshaller_coolstore_GetProductByIdRequest,
        __Marshaller_coolstore_GetProductByIdResponse);

    static readonly grpc::Method<global::Coolstore.CreateProductRequest, global::Coolstore.CreateProductResponse> __Method_CreateProduct = new grpc::Method<global::Coolstore.CreateProductRequest, global::Coolstore.CreateProductResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProduct",
        __Marshaller_coolstore_CreateProductRequest,
        __Marshaller_coolstore_CreateProductResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Coolstore.CatalogReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CatalogService</summary>
    public abstract partial class CatalogServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Ping(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> AdminPing(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ExpectError(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Coolstore.GetProductsResponse> GetProducts(global::Coolstore.GetProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Coolstore.GetProductByIdResponse> GetProductById(global::Coolstore.GetProductByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Coolstore.CreateProductResponse> CreateProduct(global::Coolstore.CreateProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CatalogService</summary>
    public partial class CatalogServiceClient : grpc::ClientBase<CatalogServiceClient>
    {
      /// <summary>Creates a new client for CatalogService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CatalogServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CatalogService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CatalogServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CatalogServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CatalogServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Ping(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Ping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Ping(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Ping, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PingAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PingAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Ping, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AdminPing(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AdminPing(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AdminPing(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AdminPing, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AdminPingAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AdminPingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AdminPingAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AdminPing, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ExpectError(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExpectError(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ExpectError(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExpectError, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ExpectErrorAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExpectErrorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ExpectErrorAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExpectError, null, options, request);
      }
      public virtual global::Coolstore.GetProductsResponse GetProducts(global::Coolstore.GetProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Coolstore.GetProductsResponse GetProducts(global::Coolstore.GetProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProducts, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Coolstore.GetProductsResponse> GetProductsAsync(global::Coolstore.GetProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Coolstore.GetProductsResponse> GetProductsAsync(global::Coolstore.GetProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProducts, null, options, request);
      }
      public virtual global::Coolstore.GetProductByIdResponse GetProductById(global::Coolstore.GetProductByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Coolstore.GetProductByIdResponse GetProductById(global::Coolstore.GetProductByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProductById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Coolstore.GetProductByIdResponse> GetProductByIdAsync(global::Coolstore.GetProductByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Coolstore.GetProductByIdResponse> GetProductByIdAsync(global::Coolstore.GetProductByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProductById, null, options, request);
      }
      public virtual global::Coolstore.CreateProductResponse CreateProduct(global::Coolstore.CreateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Coolstore.CreateProductResponse CreateProduct(global::Coolstore.CreateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Coolstore.CreateProductResponse> CreateProductAsync(global::Coolstore.CreateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Coolstore.CreateProductResponse> CreateProductAsync(global::Coolstore.CreateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProduct, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CatalogServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CatalogServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CatalogServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Ping, serviceImpl.Ping)
          .AddMethod(__Method_AdminPing, serviceImpl.AdminPing)
          .AddMethod(__Method_ExpectError, serviceImpl.ExpectError)
          .AddMethod(__Method_GetProducts, serviceImpl.GetProducts)
          .AddMethod(__Method_GetProductById, serviceImpl.GetProductById)
          .AddMethod(__Method_CreateProduct, serviceImpl.CreateProduct).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CatalogServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Ping, serviceImpl.Ping);
      serviceBinder.AddMethod(__Method_AdminPing, serviceImpl.AdminPing);
      serviceBinder.AddMethod(__Method_ExpectError, serviceImpl.ExpectError);
      serviceBinder.AddMethod(__Method_GetProducts, serviceImpl.GetProducts);
      serviceBinder.AddMethod(__Method_GetProductById, serviceImpl.GetProductById);
      serviceBinder.AddMethod(__Method_CreateProduct, serviceImpl.CreateProduct);
    }

  }
}
#endregion
